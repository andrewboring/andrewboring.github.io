<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Andrew Boring - weblog</title><link href="https://andrewboring.com/" rel="alternate"></link><link href="https://andrewboring.com/feeds/weblog/atom.xml" rel="self"></link><id>https://andrewboring.com/</id><updated>2019-11-21T00:00:00-05:00</updated><subtitle></subtitle><entry><title>Boot Images for Arch Linux ARM</title><link href="https://andrewboring.com/content/alarm-Images.html" rel="alternate"></link><published>2019-11-21T00:00:00-05:00</published><updated>2019-11-21T00:00:00-05:00</updated><author><name>Andrew Boring</name></author><id>tag:andrewboring.com,2019-11-21:/content/alarm-Images.html</id><summary type="html">&lt;p&gt;I've been working a bit with Raspberry Pi lately, both the 3B and 3B+ and soon, the Pi 4. Most of this was originally to support a client using the 3B to drive media displays and interactive kiosks. Since they were using Arch Linux ARM, I began using it, too …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been working a bit with Raspberry Pi lately, both the 3B and 3B+ and soon, the Pi 4. Most of this was originally to support a client using the 3B to drive media displays and interactive kiosks. Since they were using Arch Linux ARM, I began using it, too.&lt;/p&gt;
&lt;p&gt;Arch Linux ARM (ALArm, for short) provides a compressed tarball of the root filesystem, and you're responsible for preparing the SD card with the partitions and filesystems and unpacking the tarball onto the SD card from another computer before you can boot it. There's no installer in the traditional sense.&lt;/p&gt;
&lt;p&gt;This is fine for one-off usage, but if you're building a provisioning tool or install script, you probably want a clean image each time. You could simply duplicate your card with an SD Card duplicator, but most people don't have one of these. The other option is writing the SD Card to an image file and back again.&lt;/p&gt;
&lt;p&gt;Except...the smallest conventional card you can buy these days is 32GB. The 8GB/16GB cards are still available, but are older units and are more expensive per-GB. Keeping a 32GB image file on disk takes up considerable disk space, while writing the image &lt;em&gt;back&lt;/em&gt; to SD card can easily take a good four hours to complete. So, each time my script errored out and I needed to make an adjustment and boot a clean image, it was a time-consuming process. And since this was ARM instead of Intel, I can't simply use Virtualbox. Using Qemu to emulate ARM is doable to a small extent, but there are significant differences in a running OS in an emulator versus having actual supported hardware.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;The solution is prepared 8GB image files, built directly from the upstream Arch Linux ARM projects distribution files.&lt;/p&gt;
&lt;p&gt;This is easy enough on Linux; but if you're using macOS, working with Arch Linux-based systems is challenging at best:
- Creating BIOS partitions on UEFI/GPT Macs is a pain, and even more so on raw image files.
- No [official] macOS support for Ext4 file systems. Third-party / FUSE options only.
- Arch uses extended attributes in the bsdtar program, which is not the same as BSD tar, apparently, and certainly not GNU tar. I still don't get this one, personally.
- Seting up nullfs (bind mounts in the Linux world) using the loopback device is not well documented on macOS.&lt;/p&gt;
&lt;p&gt;The simplest solution I found to create images is to use Vagrant+Virtualbox to spin up an Arch Linux virtual machine (any other distro will work, too), create the image file, mount it via loop dev, and then download/unpack the tarball into the image file via the bind mounts. After than, you can unmount the image file, copy it off somewhere, and destroy the Vagrant box. &lt;a href="https://disconnected.systems/blog/raspberry-pi-archlinuxarm-setup/"&gt;This blog post&lt;/a&gt; has the details, as I just modified from his guide.&lt;/p&gt;
&lt;h2&gt;Automation&lt;/h2&gt;
&lt;p&gt;However, I wanted to update these images periodically and hate Hate HATE!!! repetitive, manual tasks. I know I would let this crap get way out of date if I a) wasn't getting paid to pay attention to it and b) if I can get along without doing the extra work. I'm just lazy that way.&lt;/p&gt;
&lt;p&gt;Happily, Disconnected Systems &lt;a href="https://disconnected.systems/blog/custom-rpi-image-with-github-travis/"&gt;solved this one&lt;/a&gt;, too, and after a bit of tinkering, I now have a working source repo that allows me to a) build images locally using Vagrant and b) automatically build and deploy releases directly to Github. using Travis CI.&lt;/p&gt;
&lt;p&gt;At the moment, I still need to manually create a release in Github, and then push a commit to trigger a build in Travis. The next improvement might be to have a monitor script that checks the upstream distribution for changes, then automatically creates a new build and release.&lt;/p&gt;
&lt;p&gt;Until then, current releases can be found here: https://github.com/andrewboring/alarm-images/releases
And the source repo can be found here: https://github.com/andrewboring/alarm-images&lt;/p&gt;</content><category term="tech"></category><category term="archlinux"></category><category term="archlinuxarm"></category><category term="automation"></category><category term="devops"></category><category term="ci"></category></entry><entry><title>New Site</title><link href="https://andrewboring.com/content/new-site.html" rel="alternate"></link><published>2019-09-23T00:00:00-04:00</published><updated>2019-09-23T00:00:00-04:00</updated><author><name>Andrew Boring</name></author><id>tag:andrewboring.com,2019-09-23:/content/new-site.html</id><summary type="html">&lt;p&gt;For about two years, I've had a "new website" with nothing but the word "blargh" on it and some ancient crap I wrote years ago.&lt;/p&gt;
&lt;p&gt;More recently, I needed to assemble a portfolio (both technical and musical) for types of work that I wanted to be doing, and this seemed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For about two years, I've had a "new website" with nothing but the word "blargh" on it and some ancient crap I wrote years ago.&lt;/p&gt;
&lt;p&gt;More recently, I needed to assemble a portfolio (both technical and musical) for types of work that I wanted to be doing, and this seemed like a good time to explore new options for site management and deployment. I'd seen &lt;a href="https://getpelican.com"&gt;Pelican&lt;/a&gt; pop up more and more on various technical sites, and have always preferred the speed and simplicity of maintaining a static site over a PHP-driven blog/CMS. But I hated hand-coding HTML, and markup editors tended to be engineered for LaTeX-oriented processing.&lt;/p&gt;
&lt;p&gt;I enjoy Markdown because it doesn't get in the way, so I can crank out docs pretty quickly using it. Since Pelican supports Markdown as an input format, it seemed like a good place to start.&lt;/p&gt;
&lt;p&gt;The net result is that andrewboring.com is now a &lt;a href="https://getpelican.com"&gt;Pelican&lt;/a&gt; site, and is hosted at Github pages.&lt;/p&gt;
&lt;p&gt;Benefits to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I can extend it with Python. Easy peasy lemon squeezy!&lt;/li&gt;
&lt;li&gt;I can use Javascript for any interactivity, or to interface with API-based backends.&lt;/li&gt;
&lt;li&gt;Unlike Wordpress, I just &lt;em&gt;write&lt;/em&gt;. I don't have to use some editor named "Gutenberg."&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="The Gutes!" src="https://andrewboring.com/media/steve-guttenberg.jpg"&gt;&lt;em&gt;This doesn't look like a Wordpress editor.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Benefits to you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Static content can be more secure. Fewer attack vectors for a bad actor to upload malicious content for distribution.&lt;/li&gt;
&lt;li&gt;Static content can be served faster than database-driven, dynamic content. There is no need for web-applications to drive stateless content.&lt;/li&gt;
&lt;li&gt;I can focus on my career&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Quora: Organizing Metadata in a Data Lake</title><link href="https://andrewboring.com/content/quora-organizing-metadata-in-a-data-lake.html" rel="alternate"></link><published>2019-05-03T00:00:00-04:00</published><updated>2019-05-03T00:00:00-04:00</updated><author><name>Andrew Boring</name></author><id>tag:andrewboring.com,2019-05-03:/content/quora-organizing-metadata-in-a-data-lake.html</id><content type="html">&lt;p&gt;&lt;span class='quora-content-embed' data-name='How-do-you-store-the-metadata-for-all-the-data-in-your-centralized-data-lake/answer/Andrew-Boring'&gt;Read &lt;a class='quora-content-link' data-width='560' data-height='260' href='https://www.quora.com/How-do-you-store-the-metadata-for-all-the-data-in-your-centralized-data-lake/answer/Andrew-Boring' data-type='answer' data-id='138346122' data-key='4f4e694b45c119fbbd18e7bb1b2ea308' load-full-answer='True' data-embed='pWnkSGD'&gt;&lt;a href='https://www.quora.com/Andrew-Boring'&gt;Andrew Boring&lt;/a&gt;&amp;#039;s &lt;a href='/How-do-you-store-the-metadata-for-all-the-data-in-your-centralized-data-lake#ans138346122'&gt;answer&lt;/a&gt; to &lt;a href='/How-do-you-store-the-metadata-for-all-the-data-in-your-centralized-data-lake' ref='canonical'&gt;&lt;span class="rendered_qtext"&gt;How do you store the metadata for all the data in your centralized data lake?&lt;/span&gt;&lt;/a&gt;&lt;/a&gt; on &lt;a href='https://www.quora.com'&gt;Quora&lt;/a&gt;&lt;script type="text/javascript" src="https://www.quora.com/widgets/content"&gt;&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;</content><category term="quora"></category></entry><entry><title>Quora: Are there any cloud storage that support ‘deniable encryption’?</title><link href="https://andrewboring.com/content/quora-are-there-any-cloud-storage-that-support-deniable-encryption.html" rel="alternate"></link><published>2019-02-26T00:00:00-05:00</published><updated>2019-02-26T00:00:00-05:00</updated><author><name>Andrew Boring</name></author><id>tag:andrewboring.com,2019-02-26:/content/quora-are-there-any-cloud-storage-that-support-deniable-encryption.html</id><content type="html">&lt;p&gt;&lt;span class='quora-content-embed' data-name='Are-there-any-cloud-storage-that-support-deniable-encryption/answer/Andrew-Boring'&gt;Read &lt;a class='quora-content-link' data-width='560' data-height='260' href='https://www.quora.com/Are-there-any-cloud-storage-that-support-deniable-encryption/answer/Andrew-Boring' data-type='answer' data-id='124886110' data-key='a445ef4723a1fdb697d7d1969980ab09' load-full-answer='True' data-embed='pWnkSGD'&gt;&lt;a href='https://www.quora.com/Andrew-Boring'&gt;Andrew Boring&lt;/a&gt;&amp;#039;s &lt;a href='/Are-there-any-cloud-storage-that-support-deniable-encryption#ans124886110'&gt;answer&lt;/a&gt; to &lt;a href='/Are-there-any-cloud-storage-that-support-deniable-encryption' ref='canonical'&gt;&lt;span class="rendered_qtext"&gt;Are there any cloud storage that support ‘deniable encryption’?&lt;/span&gt;&lt;/a&gt;&lt;/a&gt; on &lt;a href='https://www.quora.com'&gt;Quora&lt;/a&gt;&lt;script type="text/javascript" src="https://www.quora.com/widgets/content"&gt;&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;</content><category term="quora"></category></entry></feed>